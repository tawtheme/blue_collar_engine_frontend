{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(router, http) {\n      this.router = router;\n      this.http = http;\n      this.userSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('user')));\n      this.user = this.userSubject.asObservable();\n    }\n\n    get userValue() {\n      return this.userSubject.value;\n    }\n\n    login(username, password) {\n      var _params = {\n        'username': username,\n        'password': password\n      };\n      let reqHeaders = new HttpHeaders().set('Content-Type', 'application/json');\n      return this.http.post(`${environment.apiUrl}/api/v1/Account/Login`, JSON.stringify(_params), {\n        headers: reqHeaders\n      }).pipe(map(user => {\n        //console.log(JSON.stringify(user))\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n        return user;\n      }));\n    }\n\n    logout() {\n      // remove user from local storage to log user out\n      localStorage.removeItem('user');\n      this.userSubject.next(null);\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n  };\n\n  AuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module"}